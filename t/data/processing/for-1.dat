#data
<t:for x="[1, 2]">
  hoge
</t:for>
#output
<!DOCTYPE html><html>hogehoge</html>

#data
<head>
<t:for x="[1, 2]">
  hoge
</t:for>
#output
<!DOCTYPE html><html><head>hogehoge</head></html>

#data
<head><t:for x="[1, 2]">
  <p>hoge
</t:for>
#output
<!DOCTYPE html><html><head><p>hoge</p><p>hoge</p></head></html>

#data
a<t:for x=[]>a</t:for>
#output
<!DOCTYPE html><html><body>a</body></html>

#data
a<t:for x=[1,2,3]>a</t:for>
#output
<!DOCTYPE html><html><body>aaaa</body></html>

#data
<p>
  <t:for x=[1,2] t:space=preserve>
    <br>
  </t:for>
</p>
#output
| <!DOCTYPE html><html><body><p>
|     <br>
|   
|     <br>
|   </p></body></html>

#data
<p>
  <t:for x=[1,2]>
    <!---->
    <br>
  </t:for>
</p>
#output
| <!DOCTYPE html><html><body><p><br><br></p></body></html>

#data
<pre>
  <t:for x=[1,2]>
    <br>
  </t:for>
</pre>
#output
| <!DOCTYPE html><html><body><pre>
|   
|     <br>
|   
|     <br>
|   
| </pre></body></html>

#data
<pre>
  <t:for x=[1,2] t:space=trim>
    <br>
  </t:for>
</pre>
#output
| <!DOCTYPE html><html><body><pre>
|   <br><br>
| </pre></body></html>

#data
<p>
  <t:attr name="'x'" value=2>
  <t:for x=[1,2]>
    <t:attr name="'class'" value="'a'">
  </t:for>
  <t:attr name="'y'" value=3>
  abc
</p>
#output
<!DOCTYPE html><html><body><p x="2" y="3" class="a a">abc</p></body></html>

#data
<p>
  <t:call x="our $hoge = {}; our $fuga = rand">
  <t:for x=[1,2,3,4]>
    <t:if x="(++((our $hoge)->{our $fuga}) % 2) == 1">
      <t:class name="(our $hoge)->{our $fuga}">
    <t:else>
      abc
    </t:if>
  </t:for>
</p>
#errors
5;7;m;temma:start tag already closed;;
#output
<!DOCTYPE html><html><body><p class="1">abcabc</p></body></html>

#data
<p>
  <t:call x="our $hoge = {}; our $fuga = rand">
  <t:for x=[1,2,3,4]>
    <t:if x="(++((our $hoge)->{our $fuga}) % 2) == 1">
      <t:class name="(our $hoge)->{our $fuga}">
    <t:else>
      <!---->
      abc
    </t:if>
  </t:for>
</p>
#errors
5;7;m;temma:start tag already closed;;
#output
<!DOCTYPE html><html><body><p class="1">abc
      abc</p></body></html>

#data
<head><t:for>aaa</t:for>
#errors
1;7;m;attribute missing;;x
#output
<!DOCTYPE html><html><head></head></html>

#data
<t:for x=undef>aaa</t:for>
#errors
1;8;m;temma:undef;;
#output
<!DOCTYPE html><html></html>

#data
<head><t:for x=123>bbb</t:for>
#errors
1;14;m;temma:not arrayref;;
#output
<!DOCTYPE html><html><head></head></html>

#data
<head><t:for x="{hoge => 124}">bbb</t:for>
#errors
1;14;m;temma:not arrayref;;
#output
<!DOCTYPE html><html><head></head></html>

#data
<head><t:for x="bless [], 'hoge::fuga'">bbb</t:for>
#errors
#output
<!DOCTYPE html><html><head></head></html>

#data
<head><t:for x="bless [12, 31], 'hoge::fuga'">bbb</t:for>
#errors
#output
<!DOCTYPE html><html><head>bbbbbb</head></html>

#data
<head><t:for x="
  my $package = 'foo::bar::baz::test::' . int rand 100000;
  eval qq{
    package $package;
    use overload '\@{}' => 'arrayref', fallback => 1;
    sub arrayref {
      \$_[0]->{value};
    }
  };
  return bless {value => [1, 2, 3]}, $package;
">
  xyz
</t:for>
#output
<!DOCTYPE html><html><head>xyzxyzxyz</head></html>

#data
<head><t:for as=$x x="[1, 2, 40]">
  <t:text value=$x>
</t:for>
#output
<!DOCTYPE html><html><head>1240</head></html>

#data
<head><t:for as=$x x="[1, 2, 40]">
  <p><t:text value=$x>
</t:for>
#output
<!DOCTYPE html><html><head><p>1</p><p>2</p><p>40</p></head></html>

#data
<head><t:for as=$abc x="[1, 2, 40]">
  <t:if x="$abc < 10">
    <t:text value=$abc>
  </t:if>
</t:for>
#output
<!DOCTYPE html><html><head>12</head></html>

#data
<head><t:for as=abc x="[1, 2, 40]">
  <t:if x="$abc < 10">
    <t:text value=$abc>
  </t:if>
</t:for>
#output
<!DOCTYPE html><html><head>12</head></html>

#data
<head><t:for as=$_abc x="[1, 2, 40]">
  <t:if x="$_abc < 10">
    <t:text value=$_abc>
  </t:if>
</t:for>
#output
<!DOCTYPE html><html><head>12</head></html>

#data
<head><t:for x="[1, 30]">
  <t:text value=$_>
</t:for>
#errors
2;11;w;temma:undef;;
2;11;w;temma:undef;;
#output
<!DOCTYPE html><html><head></head></html>

#data
<head><t:for as=120 x="[1, 30]">
  <t:text value="no strict 'refs'; ${120}">
</t:for>
#errors
1;14;m;temma:variable name;;
2;11;w;temma:undef;;
2;11;w;temma:undef;;
#output
<!DOCTYPE html><html><head></head></html>

#data
<head><t:for as x="[1, 30]">
  <t:text value="no strict 'refs'; ${120}">
</t:for>
#errors
1;14;m;temma:variable name;;
2;11;w;temma:undef;;
2;11;w;temma:undef;;
#output
<!DOCTYPE html><html><head></head></html>

#data
<head><t:for as=$abc x="[1, 2, 40]">
  <t:if x="$abc < 10">
    <t:text value=$abc>
  </t:if>
</t:for>
<t:text value=$abc>
#errors escaped
6;9;m;temma:perl exception;Global symbol "$abc" requires explicit package name at html>body>t:text[value] (at line 6 column 9) line 1.\u000A;
#output
<!DOCTYPE html><html><head>12</head><body></body></html>

#data
<head><t:for as=$x x=[1,2,3]>
  <t:for as=$y x=[6,7,8]>
    <t:text value="$x . '-' . $y . '; '">
  </t:for>
</t:for>
#output
<!DOCTYPE html><html><head>1-6; 1-7; 1-8; 2-6; 2-7; 2-8; 3-6; 3-7; 3-8; </head></html>

#data
<head><t:for as=$x x=[1,2,3]>
  <t:for as=$x x=[6,7,8]>
    <t:text value="$x . '; '">
  </t:for>
</t:for>
#output
<!DOCTYPE html><html><head>6; 7; 8; 6; 7; 8; 6; 7; 8; </head></html>

#data
<t:for as=_ x=[1,2]>
  <t:text value=$_>
</t:for>
#errors
1;8;m;temma:variable name;;
2;11;w;temma:undef;;
2;11;w;temma:undef;;
#output
<!DOCTYPE html><html></html>
