#data
<t:text msgid=foobar.baz>
#output
<!DOCTYPE html><html><body>foobar.baz</body></html>

#data
<t:text msgid=hoge.fuga>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => ""}];
}
#output escaped
<!DOCTYPE html><html><body></body></html>

#data
<t:text msgid=hoge.fuga>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => "???" . $_[1] . "???"},
          {type => 'text', value => scalar @_}];
}
#output escaped
<!DOCTYPE html><html><body>???hoge.fuga???2</body></html>

#data
<t:text msgid=hoge.fuga>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => "0"}];
}
#output escaped
<!DOCTYPE html><html><body>0</body></html>

#data
<t:text msgid=hoge.fuga>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => "\x{4e00}\x{3000}abc d0"}];
}
#output escaped
<!DOCTYPE html><html><body>\u4e00\u3000abc d0</body></html>

#data
<t:text msgid=hoge.fuga>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => "\x{4e00}\x{3000}"},
          {type => 'text', value => 'abc d0'}];
}
#output escaped
<!DOCTYPE html><html><body>\u4e00\u3000abc d0</body></html>

#data
<t:text msgid=hoge.fuga>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'Q & A <p>'}];
}
#output escaped
<!DOCTYPE html><html><body>Q &amp; A &lt;p&gt;</body></html>

#data
<title t:parse><t:text msgid=hoge.fuga></title>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'Q & A <p>'}];
}
#output escaped
<!DOCTYPE html><html><head><title>Q &amp; A &lt;p&gt;</title></head></html>

#data
<style t:parse><t:text msgid=hoge.fuga></style>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'Q & A <p>'}];
}
#output escaped
<!DOCTYPE html><html><head><style>Q & A <p></style></head></html>

#data
<script t:parse><t:text msgid=hoge.fuga></script>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'Q & A <p></script>a'}];
}
#errors
1;1;m;temma:not representable in raw text;;
#output escaped
<!DOCTYPE html><html><head><script>Q & A <p></script></head></html>

#data
<script t:parse><t:text msgid=hoge.fuga></script>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'Q & A <p></scr'},
          {type => 'text', value => 'ipt>a'}];
}
#errors
1;1;m;temma:not representable in raw text;;
#output escaped
<!DOCTYPE html><html><head><script>Q & A <p></script></head></html>

#data
<t:comment><t:text msgid=hoge.fuga></t:comment>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'Q & A <p>--</script>a-'}];
}
#errors
#output escaped
<!DOCTYPE html><html><head><!--Q & A <p>- - </script>a- --></head></html>

#data
<t:text msgid=hoge>
#locale
sub plain_text_as_components {
  return [];
}
#output
<!DOCTYPE html><html><body></body></html>

#data
<t:text msgid=hoge>
#locale
sub plain_text_as_components {
  return undef;
}
#output
<!DOCTYPE html><html><body>hoge</body></html>

#data
<t:text msgid=hoge>
#locale
sub plain_text_as_components {
  return 5125;
}
#output
<!DOCTYPE html><html><body>hoge</body></html>

#data
<t:text msgid=hoge>
#locale
sub plain_text_as_components {
  return {fuga => 5125};
}
#output
<!DOCTYPE html><html><body>hoge</body></html>

#data
<t:text msgid=hoge>abc
#locale
sub plain_text_as_components {
  return [{type => 'u n k n o w n'}, {type => 'text', value => 12}];
}
#errors
1;1;m;temma:components:unknown type;u n k n o w n;
#output
<!DOCTYPE html><html><body>12abc</body></html>

#data
<t:text msgid=foo>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'ac'},
          {type => 'field', name => 1},
          {type => 'text', value => 'xy'}];
}
#errors
#output
<!DOCTYPE html><html><body>acxy</body></html>

#data
<t:text msgid=foo t:parse>
  ABC
</t:text>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'ac'},
          {type => 'field', name => 1},
          {type => 'text', value => 'xy'}];
}
#errors
#output
<!DOCTYPE html><html><body>acABCxy</body></html>

#data
<t:text msgid=foo t:parse>
  AB<p>C
</t:text>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'ac'},
          {type => 'field', name => 1},
          {type => 'text', value => 'xy'}];
}
#errors
#output
<!DOCTYPE html><html><body>acAB<p>C</p>xy</body></html>

#data
<t:text msgid=foo t:parse>
  AB<t:wait cv="Test::Temma::CV->new">C
</t:text>v
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'ac'},
          {type => 'field', name => 1},
          {type => 'text', value => 'xy'}];
}
#errors
#output
<!DOCTYPE html><html><body>acABCxyv</body></html>

#data
<t:text msgid=foo t:parse>
  AB
  <t:field>
    CD
</t:text>v
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'ac'},
          {type => 'field', name => 2},
          {type => 'text', value => 'xy'},
          {type => 'field', name => 1}];
}
#errors
#output
<!DOCTYPE html><html><body>acCDxyABv</body></html>

#data
<t:text msgid=foo t:parse t:space=preserve>
  AB
  <t:field>
    CD
</t:text>v
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'ac'},
          {type => 'field', name => 2},
          {type => 'text', value => 'xy'},
          {type => 'field', name => 1}];
}
#errors
#output
<!DOCTYPE html><html><body>ac
    CD
xyAB
  v</body></html>

#data
<t:text msgid=foo t:parse t:space=preserve>
  AB
  <t:field t:space=trim>
    CD
</t:text>v
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'ac'},
          {type => 'field', name => 2},
          {type => 'text', value => 'xy'},
          {type => 'field', name => 1}];
}
#errors
#output
<!DOCTYPE html><html><body>acCDxyAB
  v</body></html>

#data
<t:text msgid=foo t:parse>
  <t:field name=fuga>
  AB
  <t:field t:space=trim>
    CD
</t:text>v
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'ac'},
          {type => 'field', name => "hoge"},
          {type => 'text', value => 'xy'},
          {type => 'field', name => "fuga"}];
}
#errors
#output
<!DOCTYPE html><html><body>acxyABv</body></html>

#data
<t:macro name=abc>
  <b>
    <t:text msgid=foobar t:parse>
      <t:content>
    </t:text>
  </b>
</t:macro>
<p><m:abc>hoge<i>fuga</i></m:abc>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => 'FOOBAR = '},
          {type => 'field', name => 1}];
}
#output
<!DOCTYPE html><html><head></head><body><p><b>FOOBAR = hoge<i>fuga</i></b></p></body></html>

#data
<t:text msgid=hoge msgn=12>
#output
<!DOCTYPE html><html><body>hoge</body></html>

#data
<t:text msgid=hoge msgn=12>
#locale
sub plain_text_n_as_components {
  return [{type => 'text', value => $_[1] . '[' . $_[2] . ']'}];
}
#output
<!DOCTYPE html><html><body>hoge[12]</body></html>

#data
<t:text msgid=hoge msgn=12 t:parse>
  fuga
</t:text>
#locale
sub plain_text_n_as_components {
  return [{type => 'text', value => $_[1] . '[' . $_[2] . ']'},
          {type => 'field', name => 1}];
}
#output
<!DOCTYPE html><html><body>hoge[12]fuga</body></html>

#data
<t:text msgid=hoge msgn=12*20 t:parse>
  fuga
</t:text>
#locale
sub plain_text_n_as_components {
  return [{type => 'text', value => $_[1] . '[' . $_[2] . ']'},
          {type => 'field', name => 1}];
}
#output
<!DOCTYPE html><html><body>hoge[240]fuga</body></html>

#data
<t:text msgid=hoge msgn=undef t:parse>
  fuga
</t:text>
#locale
sub plain_text_as_components {
  return [{type => 'text', value => $_[1] . '[' . (defined $_[2]) . ']'},
          {type => 'field', name => 1}];
}
#output
<!DOCTYPE html><html><body>hoge[]fuga</body></html>

#data
<t:text msgid=hoge msgn=0 t:parse>
  fuga
</t:text>
#locale
sub plain_text_n_as_components {
  return [{type => 'text', value => $_[1] . '[' . $_[2] . ']'},
          {type => 'field', name => 1}];
}
#output
<!DOCTYPE html><html><body>hoge[0]fuga</body></html>

#data
<t:text msgid=hoge msgn="'abc'" t:parse>
  fuga
</t:text>
#locale
sub plain_text_n_as_components {
  return [{type => 'text', value => $_[1] . '[' . $_[2] . ']'},
          {type => 'field', name => 1}];
}
#output
<!DOCTYPE html><html><body>hoge[0]fuga</body></html>

#data
<t:text msgid=hoge msgstr="&#x1240;xaa">hoge
#output escaped
<!DOCTYPE html><html><body>\u1240xaahoge</body></html>
